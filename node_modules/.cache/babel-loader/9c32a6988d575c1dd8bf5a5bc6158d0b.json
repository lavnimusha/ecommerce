{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar tslib = require('tslib');\n\nvar heyListen = require('hey-listen');\n\nvar styleValueTypes = require('style-value-types');\n\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\n\nfunction findSpring(_a) {\n  var _b = _a.duration,\n      duration = _b === void 0 ? 800 : _b,\n      _c = _a.bounce,\n      bounce = _c === void 0 ? 0.25 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0 : _d,\n      _e = _a.mass,\n      mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  heyListen.warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n  duration = duration * 1000;\n\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10,\n      duration: duration\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n      duration: duration\n    };\n  }\n}\n\nvar rootIterations = 12;\n\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n\n  return result;\n}\n\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\n\nfunction isSpringType(options, keys) {\n  return keys.some(function (key) {\n    return options[key] !== undefined;\n  });\n}\n\nfunction getSpringOptions(options) {\n  var springOptions = tslib.__assign({\n    velocity: 0.0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    isResolvedFromDuration: false\n  }, options);\n\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = tslib.__assign(tslib.__assign(tslib.__assign({}, springOptions), derived), {\n      velocity: 0.0,\n      mass: 1.0\n    });\n    springOptions.isResolvedFromDuration = true;\n  }\n\n  return springOptions;\n}\n\nfunction spring(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0.0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1.0 : _c,\n      _d = _a.restSpeed,\n      restSpeed = _d === void 0 ? 2 : _d,\n      restDelta = _a.restDelta,\n      options = tslib.__rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n\n  var state = {\n    done: false,\n    value: from\n  };\n\n  var _e = getSpringOptions(options),\n      stiffness = _e.stiffness,\n      damping = _e.damping,\n      mass = _e.mass,\n      velocity = _e.velocity,\n      duration = _e.duration,\n      isResolvedFromDuration = _e.isResolvedFromDuration;\n\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= duration;\n      }\n\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\n\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\n\nvar zero = function (_t) {\n  return 0;\n};\n\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla];\n\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  heyListen.invariant(!!fromColorType, notAnimatable(from));\n  heyListen.invariant(!!toColorType, notAnimatable(to));\n  heyListen.invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = tslib.__assign({}, fromColor);\n\n  var mixFunc = fromColorType === styleValueTypes.hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== \"alpha\") {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function () {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (styleValueTypes.color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function (from, to) {\n  var output = tslib.__spreadArray([], from);\n\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function (origin, target) {\n  var output = tslib.__assign(tslib.__assign({}, origin), target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = styleValueTypes.complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === \"number\") {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function (origin, target) {\n  var template = styleValueTypes.complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  heyListen.invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (styleValueTypes.color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  heyListen.invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\n\nvar linear = function (p) {\n  return p;\n};\n\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\n\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\n\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\n\nvar bounceIn = reverseEasing(bounceOut);\n\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nfunction keyframes(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1 : _c,\n      ease = _a.ease,\n      offset = _a.offset,\n      _d = _a.duration,\n      duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nfunction decay(_a) {\n  var _b = _a.velocity,\n      velocity = _b === void 0 ? 0 : _b,\n      _c = _a.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 350 : _e,\n      _f = _a.restDelta,\n      restDelta = _f === void 0 ? 0.5 : _f,\n      modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\n\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\n\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n\n  var keys = new Set(Object.keys(config));\n\n  if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n\n  return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function () {\n      return sync__default['default'].update(passTimestamp, true);\n    },\n    stop: function () {\n      return sync.cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var _b, _c;\n\n  var from = _a.from,\n      _d = _a.autoplay,\n      autoplay = _d === void 0 ? true : _d,\n      _e = _a.driver,\n      driver = _e === void 0 ? framesync : _e,\n      _f = _a.elapsed,\n      elapsed = _f === void 0 ? 0 : _f,\n      _g = _a.repeat,\n      repeatMax = _g === void 0 ? 0 : _g,\n      _h = _a.repeatType,\n      repeatType = _h === void 0 ? \"loop\" : _h,\n      _j = _a.repeatDelay,\n      repeatDelay = _j === void 0 ? 0 : _j,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = tslib.__rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = animator(tslib.__assign(tslib.__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(tslib.__assign(tslib.__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(tslib.__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, sync.getFrameData().delta);\n\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar identity = function (v) {\n  return v;\n};\n\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nvar attract = createAttractor();\nvar attractExpo = createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = sync.getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\n\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\n\nvar c = function (a1) {\n  return 3.0 * a1;\n};\n\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\n\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\n\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n\n  return currentT;\n}\n\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n}\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\n\nexports.angle = angle;\nexports.animate = animate;\nexports.anticipate = anticipate;\nexports.applyOffset = applyOffset;\nexports.attract = attract;\nexports.attractExpo = attractExpo;\nexports.backIn = backIn;\nexports.backInOut = backInOut;\nexports.backOut = backOut;\nexports.bounceIn = bounceIn;\nexports.bounceInOut = bounceInOut;\nexports.bounceOut = bounceOut;\nexports.circIn = circIn;\nexports.circInOut = circInOut;\nexports.circOut = circOut;\nexports.clamp = clamp;\nexports.createAnticipate = createAnticipate;\nexports.createAttractor = createAttractor;\nexports.createBackIn = createBackIn;\nexports.createExpoIn = createExpoIn;\nexports.cubicBezier = cubicBezier;\nexports.decay = decay;\nexports.degreesToRadians = degreesToRadians;\nexports.distance = distance;\nexports.easeIn = easeIn;\nexports.easeInOut = easeInOut;\nexports.easeOut = easeOut;\nexports.inertia = inertia;\nexports.interpolate = interpolate;\nexports.isPoint = isPoint;\nexports.isPoint3D = isPoint3D;\nexports.keyframes = keyframes;\nexports.linear = linear;\nexports.mirrorEasing = mirrorEasing;\nexports.mix = mix;\nexports.mixColor = mixColor;\nexports.mixComplex = mixComplex;\nexports.pipe = pipe;\nexports.pointFromVector = pointFromVector;\nexports.progress = progress;\nexports.radiansToDegrees = radiansToDegrees;\nexports.reverseEasing = reverseEasing;\nexports.smooth = smooth;\nexports.smoothFrame = smoothFrame;\nexports.snap = snap;\nexports.spring = spring;\nexports.steps = steps;\nexports.toDecimal = toDecimal;\nexports.velocityPerFrame = velocityPerFrame;\nexports.velocityPerSecond = velocityPerSecond;\nexports.wrap = wrap;","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib","require","heyListen","styleValueTypes","sync","_interopDefaultLegacy","e","sync__default","clamp","min","max","v","Math","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","warning","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","getSpringOptions","springOptions","__assign","isResolvedFromDuration","derived","spring","from","to","restSpeed","restDelta","__rest","state","done","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","abs","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","progress","toFromDifference","mix","mixLinearColor","fromExpo","toExpo","colorTypes","hex","rgba","hsla","getColorType","find","type","test","notAnimatable","color","mixColor","fromColorType","toColorType","invariant","transform","fromColor","parse","toColor","blended","mixFunc","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","__spreadArray","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","complex","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","o","keyframes","times","createInterpolator","decay","timeConstant","_f","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","config","Set","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","cancelSync","animate","autoplay","driver","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","getFrameData","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"sources":["/Users/lavanyagurajada/enguyen/ecommerce/node_modules/popmotion/dist/popmotion.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    heyListen.warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration: duration,\n        };\n    }\n    else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration: duration,\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) { return options[key] !== undefined; });\n}\nfunction getSpringOptions(options) {\n    var springOptions = tslib.__assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = tslib.__assign(tslib.__assign(tslib.__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = tslib.__rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, duration = _e.duration, isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq_1) *\n                            Math.sin(angularFreq_1 * t) +\n                            initialDelta * Math.cos(angularFreq_1 * t)));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq_1 * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq_1 +\n                        initialDelta * Math.cos(angularFreq_1 * t)) -\n                    envelope *\n                        (Math.cos(angularFreq_1 * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq_1 *\n                                initialDelta *\n                                Math.sin(angularFreq_1 * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to -\n                    Math.exp(-undampedAngularFreq * t) *\n                        (initialDelta +\n                            (initialVelocity + undampedAngularFreq * initialDelta) *\n                                t);\n            };\n        }\n        else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq_1 *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq_1);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) { return 0; };\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) { return type.test(v); });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    heyListen.invariant(!!fromColorType, notAnimatable(from));\n    heyListen.invariant(!!toColorType, notAnimatable(to));\n    heyListen.invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = tslib.__assign({}, fromColor);\n    var mixFunc = fromColorType === styleValueTypes.hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) { return mix(origin, target, v); };\n    }\n    else if (styleValueTypes.color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = tslib.__spreadArray([], from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = tslib.__assign(tslib.__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = styleValueTypes.complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = styleValueTypes.complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    heyListen.invariant(originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (styleValueTypes.color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0], to = _a[1];\n    var mixer = _b[0];\n    return function (v) { return mixer(progress(from, to, v)); };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n    var inputLength = input.length;\n    heyListen.invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? function (v) { return interpolator(clamp(input[0], input[inputLength - 1], v)); }\n        : interpolator;\n}\n\nvar reverseEasing = function (easing) { return function (p) { return 1 - easing(1 - p); }; };\nvar mirrorEasing = function (easing) { return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n}; };\nvar createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };\nvar createBackIn = function (power) { return function (p) {\n    return p * p * ((power + 1) * p - power);\n}; };\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1\n            ? 0.5 * backEasing(p)\n            : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) { return p; };\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0)\n        return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n        : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () { return easing || easeInOut; }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) { return o * duration; });\n}\nfunction keyframes(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () { },\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) { delay = 0; }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) { delay = 0; }\n    if (isForwardPlayback === void 0) { isForwardPlayback = true; }\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync__default['default'].update(passTimestamp, true); },\n        stop: function () { return sync.cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = tslib.__rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(tslib.__assign(tslib.__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(tslib.__assign(tslib.__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(tslib.__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    }\n    else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, sync.getFrameData().delta);\n            if ((heading_1 === 1 && v > boundary_1) ||\n                (heading_1 === -1 && v < boundary_1)) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },\n    };\n}\n\nvar radiansToDegrees = function (radians) { return (radians * 180) / Math.PI; };\n\nvar angle = function (a, b) {\n    if (b === void 0) { b = zeroPoint; }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        }\n        else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) { return v; };\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0\n            ? origin + springModifiedDisplacement\n            : origin - springModifiedDisplacement;\n    };\n};\nvar attract = createAttractor();\nvar attractExpo = createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) { return (degrees * Math.PI) / 180; };\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) { precision = 2; }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) { smoothing = 0; }\n    return toDecimal(prevValue +\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) { strength = 50; }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = sync.getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta\n            ? smoothFrame(previousValue, v, timeDelta, strength)\n            : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) { return Math.round(v / points) * points; };\n    }\n    else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nvar a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };\nvar b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };\nvar c = function (a1) { return 3.0 * a1; };\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) { direction = 'end'; }\n    return function (progress) {\n        progress =\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexports.angle = angle;\nexports.animate = animate;\nexports.anticipate = anticipate;\nexports.applyOffset = applyOffset;\nexports.attract = attract;\nexports.attractExpo = attractExpo;\nexports.backIn = backIn;\nexports.backInOut = backInOut;\nexports.backOut = backOut;\nexports.bounceIn = bounceIn;\nexports.bounceInOut = bounceInOut;\nexports.bounceOut = bounceOut;\nexports.circIn = circIn;\nexports.circInOut = circInOut;\nexports.circOut = circOut;\nexports.clamp = clamp;\nexports.createAnticipate = createAnticipate;\nexports.createAttractor = createAttractor;\nexports.createBackIn = createBackIn;\nexports.createExpoIn = createExpoIn;\nexports.cubicBezier = cubicBezier;\nexports.decay = decay;\nexports.degreesToRadians = degreesToRadians;\nexports.distance = distance;\nexports.easeIn = easeIn;\nexports.easeInOut = easeInOut;\nexports.easeOut = easeOut;\nexports.inertia = inertia;\nexports.interpolate = interpolate;\nexports.isPoint = isPoint;\nexports.isPoint3D = isPoint3D;\nexports.keyframes = keyframes;\nexports.linear = linear;\nexports.mirrorEasing = mirrorEasing;\nexports.mix = mix;\nexports.mixColor = mixColor;\nexports.mixComplex = mixComplex;\nexports.pipe = pipe;\nexports.pointFromVector = pointFromVector;\nexports.progress = progress;\nexports.radiansToDegrees = radiansToDegrees;\nexports.reverseEasing = reverseEasing;\nexports.smooth = smooth;\nexports.smoothFrame = smoothFrame;\nexports.snap = snap;\nexports.spring = spring;\nexports.steps = steps;\nexports.toDecimal = toDecimal;\nexports.velocityPerFrame = velocityPerFrame;\nexports.velocityPerSecond = velocityPerSecond;\nexports.wrap = wrap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}